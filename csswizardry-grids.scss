/*------------------------------------*\
    $CSSWIZARDRY-GRIDS
\*------------------------------------*/
/**
 * CONTENTS
 * VARIABLES............Your settings.
 * GRID SETUP...........Build the grid structure.
 * WIDTHS...............Build our responsive widths around our breakpoints.
 */





/*------------------------------------*\
    $VARIABLES
\*------------------------------------*/
/**
 * If you are building a non-responsive site but would still like to use
 * csswizardry-grids, set this to false:
 */
$responsive:            true;


/**
 * Is this build mobile first? Setting to true means that all grids will be 100%
 * width if you do not apply a more specific class to them.
 */
$mobile-first:          true;


/**
 * Set the spacing between your grid items.
 */
$gutter:                24px;


/**
 * Would you like Sass’s silent classes, or regular CSS classes?
 */
$use-silent-classes:    false;


/**
 * At which point should lap and desk breakpoints kick in?
 */
$lap-start:             481px;
$desk-start:            1024px;


/**
 * Do not edit the following variables.
 */
$class-type:            unquote(".");

@if $use-silent-classes == true{
    $class-type: unquote("%");
}





/*------------------------------------*\
    $GRID SETUP
\*------------------------------------*/
/**
 * 1. Allow the grid system to be used on lists.
 * 2. Remove any margins and paddings that might affect the grid system.
 * 3. Apply a negative `margin-left` to negate the columns’ gutters.
 */
#{$class-type}grid{
    list-style:none;                /* [1] */
    margin:0;                       /* [2] */
    padding:0;                      /* [2] */
    margin-left:-$gutter;           /* [3] */
}


/**
 * 1. Cause columns to stack side-by-side.
 * 2. Space columns apart.
 * 3. Align columns to the tops of each other.
 * 4. Full-width unless told to behave otherwise.
 * 5. Required to combine fluid widths and fixed gutters.
 */
#{$class-type}grid__item{
    display:inline-block;           /* [1] */
    padding-left:$gutter;           /* [2] */
    vertical-align:top;             /* [3] */
    @if $mobile-first == true{
        width:100%;                 /* [4] */
    }
    -webkit-box-sizing:border-box;  /* [5] */
       -moz-box-sizing:border-box;  /* [5] */
            box-sizing:border-box;  /* [5] */
}





/*------------------------------------*\
    $WIDTHS
\*------------------------------------*/
/**
 * These next bits get worked out for you.
 */
$palm-end:              $lap-start - 1px;
$lap-end:               $desk-start - 1px;


/**
 * Create our widths, prefixed by the specified namespace.
 */
@mixin device-type($namespace:""){


    /**
     * Whole
     */
    #{$class-type}#{$namespace}\31 \/1          { width:100%; }


    /**
     * Halves
     */
    #{$class-type}#{$namespace}\31 \/2          { width:50%; }


    /**
     * Thirds
     */
    #{$class-type}#{$namespace}\31 \/3          { width:33.333%; }
    #{$class-type}#{$namespace}\32 \/3          { width:66.666%; }


    /**
     * Quarters
     */
    #{$class-type}#{$namespace}\31 \/4          { width:25%; }
    #{$class-type}#{$namespace}\32 \/4          { @extend #{$class-type}#{$namespace}\31 \/2; }
    #{$class-type}#{$namespace}\33 \/4          { width:75%; }


    /**
     * Fifths
     */
    #{$class-type}#{$namespace}\31 \/5          { width:20%; }
    #{$class-type}#{$namespace}\32 \/5          { width:40%; }
    #{$class-type}#{$namespace}\33 \/5          { width:60%; }
    #{$class-type}#{$namespace}\34 \/5          { width:80%; }


    /**
     * Sixths
     */
    #{$class-type}#{$namespace}\31 \/6          { width:16.666%; }
    #{$class-type}#{$namespace}\32 \/6          { @extend #{$class-type}#{$namespace}\31 \/3; }
    #{$class-type}#{$namespace}\33 \/6          { @extend #{$class-type}#{$namespace}\31 \/2; }
    #{$class-type}#{$namespace}\34 \/6          { @extend #{$class-type}#{$namespace}\32 \/3; }
    #{$class-type}#{$namespace}\35 \/6          { width:83.333%; }


    /**
     * Eighths
     */
    #{$class-type}#{$namespace}\31 \/8          { width:12.5%; }
    #{$class-type}#{$namespace}\32 \/8          { @extend #{$class-type}#{$namespace}\31 \/4; }
    #{$class-type}#{$namespace}\33 \/8          { width:37.5%; }
    #{$class-type}#{$namespace}\34 \/8          { @extend #{$class-type}#{$namespace}\31 \/2; }
    #{$class-type}#{$namespace}\35 \/8          { width:62.5%; }
    #{$class-type}#{$namespace}\36 \/8          { @extend #{$class-type}#{$namespace}\33 \/4; }
    #{$class-type}#{$namespace}\37 \/8          { width:87.5%; }


    /**
     * Tenths
     */
    #{$class-type}#{$namespace}\31 \/10         { width:10%; }
    #{$class-type}#{$namespace}\32 \/10         { @extend #{$class-type}#{$namespace}\31 \/5; }
    #{$class-type}#{$namespace}\33 \/10         { width:30%; }
    #{$class-type}#{$namespace}\34 \/10         { @extend #{$class-type}#{$namespace}\32 \/5; }
    #{$class-type}#{$namespace}\35 \/10         { @extend #{$class-type}#{$namespace}\31 \/2; }
    #{$class-type}#{$namespace}\36 \/10         { @extend #{$class-type}#{$namespace}\33 \/5; }
    #{$class-type}#{$namespace}\37 \/10         { width:70%; }
    #{$class-type}#{$namespace}\38 \/10         { @extend #{$class-type}#{$namespace}\34 \/5; }
    #{$class-type}#{$namespace}\39 \/10         { width:90%; }


    /**
     * Twelfths
     */
    #{$class-type}#{$namespace}\31 \/12         { width:8.333%; }
    #{$class-type}#{$namespace}\32 \/12         { @extend #{$class-type}#{$namespace}\31 \/6; }
    #{$class-type}#{$namespace}\33 \/12         { @extend #{$class-type}#{$namespace}\31 \/4; }
    #{$class-type}#{$namespace}\34 \/12         { @extend #{$class-type}#{$namespace}\31 \/3; }
    #{$class-type}#{$namespace}\35 \/12         { width:41.666% }
    #{$class-type}#{$namespace}\36 \/12         { @extend #{$class-type}#{$namespace}\31 \/2; }
    #{$class-type}#{$namespace}\37 \/12         { width:58.333%; }
    #{$class-type}#{$namespace}\38 \/12         { @extend #{$class-type}#{$namespace}\32 \/3; }
    #{$class-type}#{$namespace}\39 \/12         { @extend #{$class-type}#{$namespace}\33 \/4; }
    #{$class-type}#{$namespace}\31 0\/12        { @extend #{$class-type}#{$namespace}\35 \/6; }
    #{$class-type}#{$namespace}\31 1\/12        { width:91.666%; }


}


/**
 * Our regular, non-responsive width classes.
 */
@include device-type();


@if $responsive == true{


    /**
    * Our breakpoint specific widths classes.
    */
    @media only screen and (max-width:$palm-end){
        @include device-type("palm-");
    }

    @media only screen and (min-width:$lap-start) and (max-width:$lap-end){
        @include device-type("lap-");
    }

    @media only screen and (max-width:$lap-end){
        @include device-type("portable-");
    }

    @media only screen and (min-width:$desk-start){
        @include device-type("desk-");
    }


}
